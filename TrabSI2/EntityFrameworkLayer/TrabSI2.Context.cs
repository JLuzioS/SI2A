//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class L51NG3Entities : DbContext
    {
        public L51NG3Entities()
            : base("name=L51NG3Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activos> Activos { get; set; }
        public virtual DbSet<Competencias> Competencias { get; set; }
        public virtual DbSet<Equipas> Equipas { get; set; }
        public virtual DbSet<Funcionarios> Funcionarios { get; set; }
        public virtual DbSet<FuncionariosEquipas> FuncionariosEquipas { get; set; }
        public virtual DbSet<Intervencoes> Intervencoes { get; set; }
        public virtual DbSet<IntervencoesEquipas> IntervencoesEquipas { get; set; }
        public virtual DbSet<PrecosActivos> PrecosActivos { get; set; }
        public virtual DbSet<Profissoes> Profissoes { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TiposActivos> TiposActivos { get; set; }
        public virtual DbSet<ResumoIntervencoes> ResumoIntervencoes { get; set; }
    
        [DbFunction("L51NG3Entities", "listAllIntervencoesFromDate")]
        public virtual IQueryable<listAllIntervencoesFromDate_Result> listAllIntervencoesFromDate(string data)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<listAllIntervencoesFromDate_Result>("[L51NG3Entities].[listAllIntervencoesFromDate](@data)", dataParameter);
        }
    
        public virtual int deleteFuncionario(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteFuncionario", idParameter);
        }
    
        public virtual int deleteFuncionariosCompetencias(Nullable<int> funcionario, Nullable<int> competencia)
        {
            var funcionarioParameter = funcionario.HasValue ?
                new ObjectParameter("funcionario", funcionario) :
                new ObjectParameter("funcionario", typeof(int));
    
            var competenciaParameter = competencia.HasValue ?
                new ObjectParameter("competencia", competencia) :
                new ObjectParameter("competencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteFuncionariosCompetencias", funcionarioParameter, competenciaParameter);
        }
    
        public virtual int deleteFuncionariosEquipa(Nullable<int> funcionario, Nullable<int> equipa, Nullable<System.DateTime> dtSaida)
        {
            var funcionarioParameter = funcionario.HasValue ?
                new ObjectParameter("funcionario", funcionario) :
                new ObjectParameter("funcionario", typeof(int));
    
            var equipaParameter = equipa.HasValue ?
                new ObjectParameter("equipa", equipa) :
                new ObjectParameter("equipa", typeof(int));
    
            var dtSaidaParameter = dtSaida.HasValue ?
                new ObjectParameter("dtSaida", dtSaida) :
                new ObjectParameter("dtSaida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteFuncionariosEquipa", funcionarioParameter, equipaParameter, dtSaidaParameter);
        }
    
        public virtual int insertEquipa(string localizacao, Nullable<int> numElementos)
        {
            var localizacaoParameter = localizacao != null ?
                new ObjectParameter("localizacao", localizacao) :
                new ObjectParameter("localizacao", typeof(string));
    
            var numElementosParameter = numElementos.HasValue ?
                new ObjectParameter("numElementos", numElementos) :
                new ObjectParameter("numElementos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEquipa", localizacaoParameter, numElementosParameter);
        }
    
        public virtual int insertFuncionario(string cc, string nif, string nome, Nullable<System.DateTime> dtNascimento, string morada, string codigoPostal, string localidade, Nullable<int> profissao, string telefone, string telemovel)
        {
            var ccParameter = cc != null ?
                new ObjectParameter("cc", cc) :
                new ObjectParameter("cc", typeof(string));
    
            var nifParameter = nif != null ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var dtNascimentoParameter = dtNascimento.HasValue ?
                new ObjectParameter("dtNascimento", dtNascimento) :
                new ObjectParameter("dtNascimento", typeof(System.DateTime));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var localidadeParameter = localidade != null ?
                new ObjectParameter("localidade", localidade) :
                new ObjectParameter("localidade", typeof(string));
    
            var profissaoParameter = profissao.HasValue ?
                new ObjectParameter("profissao", profissao) :
                new ObjectParameter("profissao", typeof(int));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            var telemovelParameter = telemovel != null ?
                new ObjectParameter("telemovel", telemovel) :
                new ObjectParameter("telemovel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertFuncionario", ccParameter, nifParameter, nomeParameter, dtNascimentoParameter, moradaParameter, codigoPostalParameter, localidadeParameter, profissaoParameter, telefoneParameter, telemovelParameter);
        }
    
        public virtual int insertFuncionariosCompetencias(Nullable<int> funcionario, Nullable<int> competencia)
        {
            var funcionarioParameter = funcionario.HasValue ?
                new ObjectParameter("funcionario", funcionario) :
                new ObjectParameter("funcionario", typeof(int));
    
            var competenciaParameter = competencia.HasValue ?
                new ObjectParameter("competencia", competencia) :
                new ObjectParameter("competencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertFuncionariosCompetencias", funcionarioParameter, competenciaParameter);
        }
    
        public virtual int insertFuncionariosEquipa(Nullable<int> funcionario, Nullable<int> equipa, Nullable<System.DateTime> dtEntrada)
        {
            var funcionarioParameter = funcionario.HasValue ?
                new ObjectParameter("funcionario", funcionario) :
                new ObjectParameter("funcionario", typeof(int));
    
            var equipaParameter = equipa.HasValue ?
                new ObjectParameter("equipa", equipa) :
                new ObjectParameter("equipa", typeof(int));
    
            var dtEntradaParameter = dtEntrada.HasValue ?
                new ObjectParameter("dtEntrada", dtEntrada) :
                new ObjectParameter("dtEntrada", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertFuncionariosEquipa", funcionarioParameter, equipaParameter, dtEntradaParameter);
        }
    
        public virtual int p_CriaInter(Nullable<int> competencias, Nullable<int> activo, Nullable<decimal> vlMonetario, Nullable<System.DateTime> dtInicio, Nullable<int> perMeses, ObjectParameter id)
        {
            var competenciasParameter = competencias.HasValue ?
                new ObjectParameter("competencias", competencias) :
                new ObjectParameter("competencias", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var vlMonetarioParameter = vlMonetario.HasValue ?
                new ObjectParameter("vlMonetario", vlMonetario) :
                new ObjectParameter("vlMonetario", typeof(decimal));
    
            var dtInicioParameter = dtInicio.HasValue ?
                new ObjectParameter("dtInicio", dtInicio) :
                new ObjectParameter("dtInicio", typeof(System.DateTime));
    
            var perMesesParameter = perMeses.HasValue ?
                new ObjectParameter("perMeses", perMeses) :
                new ObjectParameter("perMeses", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_CriaInter", competenciasParameter, activoParameter, vlMonetarioParameter, dtInicioParameter, perMesesParameter, id);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int updateFuncionario(Nullable<int> id, string cc, string nif, string nome, Nullable<System.DateTime> dtNascimento, string morada, string codigoPostal, string localidade, Nullable<int> profissao, string telefone, string telemovel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var ccParameter = cc != null ?
                new ObjectParameter("cc", cc) :
                new ObjectParameter("cc", typeof(string));
    
            var nifParameter = nif != null ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var dtNascimentoParameter = dtNascimento.HasValue ?
                new ObjectParameter("dtNascimento", dtNascimento) :
                new ObjectParameter("dtNascimento", typeof(System.DateTime));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var localidadeParameter = localidade != null ?
                new ObjectParameter("localidade", localidade) :
                new ObjectParameter("localidade", typeof(string));
    
            var profissaoParameter = profissao.HasValue ?
                new ObjectParameter("profissao", profissao) :
                new ObjectParameter("profissao", typeof(int));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            var telemovelParameter = telemovel != null ?
                new ObjectParameter("telemovel", telemovel) :
                new ObjectParameter("telemovel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateFuncionario", idParameter, ccParameter, nifParameter, nomeParameter, dtNascimentoParameter, moradaParameter, codigoPostalParameter, localidadeParameter, profissaoParameter, telefoneParameter, telemovelParameter);
        }
    
        public virtual int updateIntervencaoState(Nullable<int> id, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateIntervencaoState", idParameter, estadoParameter);
        }

        public int obtainCodigoDeEquipaLivre(int descricao)
        {
            var value = Database.SqlQuery<int>("select dbo.obtainCodigoDeEquipaLivre(@descricao) equipaId", new System.Data.SqlClient.SqlParameter("@descricao", descricao)).Single();
            return value;
        }
    }
}
